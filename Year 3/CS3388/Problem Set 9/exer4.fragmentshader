#version 330

in vec3 fragPos;
in vec3 fragNorm;
in vec3 fragLightDir;
in vec3 fragEyeDir;

uniform vec3 lightColor;
uniform vec3 materialAmbient;
uniform vec3 materialDiffuse;
uniform vec3 materialSpecular;

out vec4 color;

void main(){
    vec3 ambient = materialAmbient * lightColor;
    vec3 diffuse = materialDiffuse * lightColor * max(dot(fragNorm, fragLightDir), 0.0);
    vec3 reflection = reflect(-fragLightDir, fragNorm);
    vec3 specular = materialSpecular * lightColor * pow(max(dot(reflection, fragEyeDir), 0.0), 32.0);
    color = vec4(ambient + diffuse + specular, 1.0);
}